


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 40004100 
                       DC      EQU              0x40004100
   23 00000000 00000000 
                       DC_COMMAND
                               EQU              0
   24 00000000 00000040 
                       DC_DATA EQU              0x40
   25 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   26 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   27 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   28 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   29 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   30 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   31 00000000         
   32 00000000                 EXPORT           writecommand
   33 00000000                 EXPORT           writedata
   34 00000000         
   35 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   36 00000000                 THUMB



ARM Macro Assembler    Page 2 


   37 00000000                 ALIGN
   38 00000000         
   39 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   40 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   41 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   42 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   43 00000000         ; lot of data, the FIFOs are not used when writing
   44 00000000         ; commands, and they are used when writing data.  This
   45 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   46 00000000         ; that is actually being transmitted.
   47 00000000         ; The write command operation waits until all data has b
                       een
   48 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   49 00000000         ; the command, and then waits for the transmission to
   50 00000000         ; finish.
   51 00000000         ; The write data operation waits until there is room in 
                       the
   52 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   53 00000000         ; and then adds the data to the transmit FIFO.
   54 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   55 00000000         ; the SSI0 module is not initialized and enabled.
   56 00000000         
   57 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   58 00000000         ; Input: R0  8-bit command to transmit
   59 00000000         ; Output: none
   60 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   61 00000000         writecommand
   62 00000000         ;; --UUU-- Code to write a command to the LCD
   63 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   64 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   65 00000000         ;3) Clear D/C=PA6 to zero
   66 00000000         ;4) Write the command to SSI0_DR_R
   67 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   68 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   69 00000000         
   70 00000000 E92D 4FF0       PUSH             {R4-R11, LR}
   71 00000004         
   72 00000004 4913            LDR              R1, =SSI0_SR_R
   73 00000006 780A    cLoop   LDRB             R2, [R1]    ; read SSI0_SR_R
   74 00000008 F002 0210       AND              R2, #0x10
   75 0000000C 2A10            CMP              R2, #0x10   ; check bit 4
   76 0000000E D0FA            BEQ              cLoop       ; bit 5 is high (wa
                                                            it for busy bit to 
                                                            be 0)
   77 00000010         
   78 00000010 4911            LDR              R1, =GPIO_PORTA_DATA_R
   79 00000012 780A            LDRB             R2, [R1]    ; Read port A



ARM Macro Assembler    Page 3 


   80 00000014 F022 0240       BIC              R2, #0x40   ; clear PA6 to 0 to
                                                             set D/C pin to com
                                                            mand
   81 00000018 700A            STRB             R2, [R1]
   82 0000001A         
   83 0000001A 4910            LDR              R1, =SSI0_DR_R
   84 0000001C 7008            STRB             R0, [R1]    ; write command to 
                                                            SSIO_R_R
   85 0000001E         
   86 0000001E         
   87 0000001E 490D            LDR              R1, =SSI0_SR_R ; //to double ch
                                                            eck command has bee
                                                            n processed
   88 00000020 780A    cLoop2  LDRB             R2, [R1]    ; read SSI0_SR_R ag
                                                            ain
   89 00000022 F002 0210       AND              R2, #0x10
   90 00000026 2A10            CMP              R2, #0x10   ; check bit 4 again
                                                            
   91 00000028 D0FA            BEQ              cLoop2      ; bit 5 is hight (w
                                                            ait for busy bit to
                                                             be 0)
   92 0000002A         
   93 0000002A E8BD 4FF0       POP              {R4-R11, LR}
   94 0000002E         
   95 0000002E 4770            BX               LR          ;   return
   96 00000030         
   97 00000030         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   98 00000030         ; Input: R0  8-bit data to transmit
   99 00000030         ; Output: none
  100 00000030         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
  101 00000030         writedata
  102 00000030         ;; --UUU-- Code to write data to the LCD
  103 00000030         ;1) Read SSI0_SR_R and check bit 1, 
  104 00000030         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  105 00000030         ;3) Set D/C=PA6 to one
  106 00000030         ;4) Write the 8-bit data to SSI0_DR_R
  107 00000030         
  108 00000030 E92D 4FF0       PUSH             {R4-R11, LR}
  109 00000034         
  110 00000034 4907            LDR              R1, =SSI0_SR_R
  111 00000036 780A    dLoop   LDRB             R2, [R1]    ; read SSIO_SR_R
  112 00000038 F002 0202       AND              R2, #0x02
  113 0000003C 2A00            CMP              R2, #0x00   ; check bit 1
  114 0000003E D0FA            BEQ              dLoop       ; if bit 1 is 0, lo
                                                            op back
  115 00000040         
  116 00000040 4905            LDR              R1, =GPIO_PORTA_DATA_R
  117 00000042 780A            LDRB             R2, [R1]    ; read Port A
  118 00000044 F042 0240       ORR              R2, #0x40   ; set PA6 to 1 to s
                                                            et D/C pin to data
  119 00000048 700A            STRB             R2, [R1]
  120 0000004A         
  121 0000004A 4904            LDR              R1, =SSI0_DR_R
  122 0000004C 7008            STRB             R0, [R1]    ; write 8-bit data 
                                                            to SSIO_DR_R
  123 0000004E         



ARM Macro Assembler    Page 4 


  124 0000004E E8BD 4FF0       POP              {R4-R11, LR}
  125 00000052         
  126 00000052 4770            BX               LR          ;   return
  127 00000054         
  128 00000054         
  129 00000054         ;***************************************************
  130 00000054         ; This is a library for the Adafruit 1.8" SPI display.
  131 00000054         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  132 00000054         ; ----> http://www.adafruit.com/products/358
  133 00000054         ; as well as Adafruit raw 1.8" TFT display
  134 00000054         ; ----> http://www.adafruit.com/products/618
  135 00000054         ;
  136 00000054         ; Check out the links above for our tutorials and wiring
                        diagrams
  137 00000054         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  138 00000054         ; interface (RST is optional)
  139 00000054         ; Adafruit invests time and resources providing this ope
                       n source code,
  140 00000054         ; please support Adafruit and open-source hardware by pu
                       rchasing
  141 00000054         ; products from Adafruit!
  142 00000054         ;
  143 00000054         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  144 00000054         ; MIT license, all text above must be included in any re
                       distribution
  145 00000054         ;****************************************************
  146 00000054         
  147 00000054                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  148 00000054                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_SpaceInvaders -ID:\Users\12817\Document
s\ARM\CMSIS\5.6.0\CMSIS\Core\Include -ID:\Users\12817\Documents\Keil\TM4C_DFP\1
.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_
VERSION SETA 529" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" 
--list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 35 in file LCD.s
   Uses
      None
Comment: .text unused
cLoop 00000006

Symbol: cLoop
   Definitions
      At line 73 in file LCD.s
   Uses
      At line 76 in file LCD.s
Comment: cLoop used once
cLoop2 00000020

Symbol: cLoop2
   Definitions
      At line 88 in file LCD.s
   Uses
      At line 91 in file LCD.s
Comment: cLoop2 used once
dLoop 00000036

Symbol: dLoop
   Definitions
      At line 111 in file LCD.s
   Uses
      At line 114 in file LCD.s
Comment: dLoop used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 61 in file LCD.s
   Uses
      At line 32 in file LCD.s
Comment: writecommand used once
writedata 00000030

Symbol: writedata
   Definitions
      At line 101 in file LCD.s
   Uses
      At line 33 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 22 in file LCD.s
   Uses
      None
Comment: DC unused
DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 23 in file LCD.s
   Uses
      None
Comment: DC_COMMAND unused
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 24 in file LCD.s
   Uses
      None
Comment: DC_DATA unused
GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 30 in file LCD.s
   Uses
      At line 78 in file LCD.s
      At line 116 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 83 in file LCD.s
      At line 121 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 72 in file LCD.s
      At line 87 in file LCD.s
      At line 110 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 28 in file LCD.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 27 in file LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
9 symbols
351 symbols in table
